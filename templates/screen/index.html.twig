{% extends 'baseSC.html.twig' %}

{% block title %}Pantalla informativa{% endblock %}

{% block inside_body %}
    <div>
        <div>
            <div class="time-card mb-0 style=font-size: 20px;">
                <div class="card">
                    <p class="time-text">
                        <span id="current-hour">Carregant hora...</span>
                        <span class="time-sub-text" id="current-period">AM/PM</span>
                    </p>
                    <p class="day-text" id="current-day">Carregant dia...</p>
                </div>
            </div>

            <div class="d-flex justify-content-end align-items-center">
                <div class="text-center flex-grow-1">
                    <h1 class="mb-0">TORN - <span>{{ (hora|date('H') < 15) ? 'Matí' : 'Tarda' }}</span></h1>
                </div>
                <p class="mb-0" style="font-size: 20px;"><strong>Data actual: {{ hora|date('d/m/y') }}</strong></p>
            </div>

                <table class="table container-fluid custom-table">
                    <thead>
                        <tr>
                            <th scope="col" >Especialitat</th>
                            <th scope="col">Metge/Metgessa</th>
                            <th scope="col">Planta</th>
                            <th scope="col">Consulta</th>

                        </tr>
                    </thead>
                    <tbody class="table-group-divider">
                    {% for doctor in doctors %}
                        <tr>
                            <td>
                                {% if doctor.specialities|length > 0 %}
                                    {% for speciality in doctor.specialities %}
                                        {{ speciality.getTypeSpeciality() }}{% if not loop.last %},{% endif %}
                                    {% endfor %}
                                {% else %}
                                    No asignado
                                {% endif %}
                            </td>
                            <td>{{ doctor.name }} {{ doctor.surname }}</td>
                            <td>
                                {% if doctor.schedules|length > 0 %}
                                    Planta
                                    {% for schedule in doctor.schedules %}
                                        {{ schedule.location ? schedule.location.getFloor : ' ' }}
                                        {% if not loop.last %}{% endif %}
                                    {% endfor %}
                                {% else %}
                                    No assignat
                                {% endif %}
                            </td>
                            <td>
                                {% if doctor.schedules|length > 0 %}
                                    {% for schedule in doctor.schedules %}
                                        Consulta {{ schedule.location ? schedule.location.getRoom : ' ' }}
                                        {% if not loop.last %}{% endif %}
                                    {% endfor %}
                                {% else %}
                                    No assignat
                                {% endif %}
                            </td>
                        </tr>
                    {% endfor %}
                    </tbody>
                </table>

            </div>
        </div>
    </div>
    {% block javascripts %}
        {{ parent() }}
        <script>
            function fetchCurrentTime() {
                fetch('/current_time') // Usa la ruta directamente aquí
                    .then(response => response.json())
                    .then(data => {
                        const currentDateTime = new Date(data.time);
                        const hours = currentDateTime.getHours();
                        document.getElementById('current-time').textContent = 'Hora actual: ' + data.time;
                        document.querySelector('h1 > span').textContent = hours < 15 ? 'Matí' : 'Tarda';
                    })
                    .catch(error => {
                        console.error('Error al actualizar la hora:', error);
                    });
            }

            // Actualizar la hora cada minuto
            setInterval(fetchCurrentTime, 50000);

            // Actualizar la hora al cargar la página
            document.addEventListener('DOMContentLoaded', fetchCurrentTime);

            function updateDateTime() {
                const now = new Date();
                const hours = now.getHours();
                const minutes = now.getMinutes();
                const isAm = hours < 12;
                const formattedHours = ((hours + 11) % 12 + 1); // Convierte a formato 12 horas
                const formattedMinutes = minutes < 10 ? '0' + minutes : minutes;

                document.getElementById('current-hour').textContent = `${formattedHours}:${formattedMinutes}`;
                document.getElementById('current-period').textContent = isAm ? 'AM' : 'PM';

                const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };
                document.getElementById('current-day').textContent = now.toLocaleDateString('es-ES', options);
            }

            // Actualizar la hora y fecha cada minuto
            setInterval(updateDateTime, 60000);

            // Actualizar la hora y fecha al cargar la página
            document.addEventListener('DOMContentLoaded', updateDateTime);

        </script>
    {% endblock %}

{% endblock %}
